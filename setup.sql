-- WAREHOUSE CREATION --
USE ROLE SYSADMIN;

CREATE WAREHOUSE IF NOT EXISTS PROTEIN
WITH WAREHOUSE_SIZE = 'SMALL'
     WAREHOUSE_TYPE = 'STANDARD'
     AUTO_RESUME = TRUE   
;

USE WAREHOUSE PROTEIN;

-- DATABASE SCHEMA CREATION --
CREATE DATABASE IF NOT EXISTS BIONEMO_DB;
USE DATABASE BIONEMO_DB;

CREATE SCHEMA IF NOT EXISTS PROTEIN;
USE SCHEMA BIONEMO_DB.PROTEIN;

-- STAGE CREATION --
CREATE STAGE IF NOT EXISTS LLM_WORKSPACE;

-- TABLE CREATION --
CREATE OR REPLACE TABLE BIONEMO_DB.PROTEIN.PROTEIN_SEQUENCE_FUNCTION (
        UNIPROTID VARCHAR(16777216),
        SEQUENCE VARCHAR(16777216),
        EMB VECTOR(FLOAT, 1024),
        FUNCTION VARCHAR(16777216)
)
;

-- COMPUTE POOL CREATION --
CREATE COMPUTE POOL PROTEIN_STREAMLIT_CP 
  MIN_NODES = 1
  MAX_NODES = 1
  INSTANCE_FAMILY = CPU_X64_M;

USE ROLE SECURITYADMIN;
CREATE ROLE PROTEIN_SEARCH;
GRANT USAGE ON COMPUTE POOL PROTEIN_STREAMLIT_CP TO ROLE PROTEIN_SEARCH;
GRANT MONITOR ON COMPUTE POOL PROTEIN_STREAMLIT_CP TO ROLE PROTEIN_SEARCH;

-- SERVICE CREATION --
USE ROLE PROTEIN_SEARCH;
CREATE SERVICE protein_streamlit
IN COMPUTE POOL PROTEIN_STREAMLIT_CP
FROM SPECIFICATION $$
spec:
  containers:
  - name: "protein-streamlit"
    image: "<your image repo URL>"
    env:
      SNOWFLAKE_WAREHOUSE: "PROTEIN"
    volumeMounts:
    - name: "pdb"
      mountPath: "/app/pdb"
  volumes:
  - name: "pdb"
    source: "@BIONEMO_DB.PROTEIN.LLM_WORKSPACE"
    uid: 1000
    gid: 1000
  endpoints:
  - name: "streamlit"
    port: 8080
    public: True
$$
;